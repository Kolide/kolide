package sso

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestDecodeSuccessfulSalesforceResponse(t *testing.T) {
	samlResponse := ``
	auth, err := DecodeAuthResponse(samlResponse)
	require.Nil(t, err)
	require.NotNil(t, auth)
	info, ok := auth.(*resp)
	require.True(t, ok)
	status, err := info.status()
	assert.Nil(t, err)
	assert.Equal(t, Success, status)
	assert.Equal(t, "john@kolide.co", auth.UserID())
}
