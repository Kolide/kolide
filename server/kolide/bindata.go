// Code generated by go-bindata.
// sources:
// server/mail/templates/change_email_confirmation.html
// server/mail/templates/invite_token.html
// server/mail/templates/password_reset.html
// server/mail/templates/smtp_setup.html
// DO NOT EDIT!

package kolide

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _serverMailTemplatesChange_email_confirmationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x5d\x8f\xe3\x34\x14\x7d\xdf\x5f\x71\xf1\x0a\x0d\x48\x93\x8f\x76\x4a\x77\x37\x4d\xca\xa2\x95\x10\x12\x48\x20\x58\xc4\xb3\x6b\xdf\x24\x56\x1d\x3b\x6b\xbb\xd3\x96\xd1\xfc\x77\xe4\x24\x6d\x33\x4d\x3a\x5f\xcb\xbc\x4c\x9c\x5c\x9f\xeb\x7b\x7c\xee\xb1\x9b\x96\xae\x92\xcb\x37\x00\x69\x89\x94\xfb\x07\x80\xb4\x42\x47\xa1\x74\xae\x0e\xf0\xcb\x46\xdc\x66\xe4\x93\x56\x0e\x95\x0b\x3e\xef\x6b\x24\xc0\xda\x51\x46\x1c\xee\x5c\xe4\x01\x16\xc0\x4a\x6a\x2c\xba\x6c\xe3\xf2\xe0\x3d\x81\xa8\x43\x92\x42\xad\xa1\x34\x98\x67\xc4\xe3\xd9\x24\x8a\x72\xad\x9c\x0d\x0b\xad\x0b\x89\xb4\x16\x36\x64\xba\x8a\x98\xb5\x3f\xe6\xb4\x12\x72\x9f\xfd\xbe\xdb\x17\xa8\x92\x59\x1c\x5f\xbf\x8b\x63\x02\x06\x65\x46\xac\xdb\x4b\xb4\x25\xa2\x23\x1d\x72\xf3\xa6\x7d\x06\x58\x69\xbe\x87\xbb\x6e\x00\xe0\x53\x04\x2d\x5c\x02\x57\x2d\xe0\xd5\x35\x58\xaa\x6c\x60\xd1\x88\x7c\xd1\x85\xde\xbf\xe9\x1e\xca\xc9\xf9\xf4\x2d\x8a\xa2\x74\x09\x28\x6d\x2a\x2a\x17\xc7\x8f\x15\x35\x85\x50\x09\x4c\xe3\x7a\x07\x31\xcc\x9a\x7f\x03\xbc\xba\x07\x27\x85\xc2\xa0\xec\xe0\xa6\xe1\x30\x98\xf6\x82\x3d\xa5\x01\x47\xa6\x0d\x75\x42\x2b\x9f\x5f\xe1\x29\x3b\xd3\x52\x9b\x04\xde\xce\xe8\x87\x18\xa7\x43\xa4\xa4\xd4\xb7\x68\x1e\xc3\xdb\x28\x8e\xc6\x2f\x69\x30\xf9\x63\x85\x5c\x50\xd0\x4a\xee\xc1\x32\x83\xa8\x80\x2a\x0e\xdf\x55\x74\x17\x70\xbc\x15\x0c\x83\xad\xe0\xae\x4c\x60\xf6\x3e\xae\x77\xdf\xf7\xb3\xd0\x95\xc4\xde\x18\xa0\x8b\x9c\xc4\xf1\xb7\xf0\x8d\xa8\x6a\x6d\x1c\x55\x6e\xd1\x8b\xa8\x29\xe7\x42\x15\x09\xc4\x17\x02\x0e\x4c\x8f\x7f\x3f\x2e\x1b\xc0\xf1\xd7\xa6\x6e\x36\x71\x1c\xfd\x41\x96\x34\x3a\xca\x2d\x8d\x0e\x8d\x92\x7a\xd5\x75\x6a\x6c\x09\xa0\x52\x14\x2a\x23\x0c\x95\x43\x43\x60\xa5\x0d\x47\x93\x91\x98\x00\x43\x29\xbb\xac\xc7\xb1\xad\x29\x3b\x8c\x5b\x79\x64\xc4\x2f\x9a\xb4\x15\x1c\x06\xab\xa2\xd9\xf4\x8c\xbc\xcd\x67\xf9\x3c\x5f\x11\x68\xd6\x92\x91\x15\x65\xeb\xc2\xe8\x8d\xe2\x09\x74\xdf\x16\x97\xa4\xff\x93\x11\x54\x3e\xe8\x80\xa3\x94\xe6\xf3\xf9\x87\x79\xbe\xe8\x56\x1b\x30\x2d\x25\xad\x2d\x26\x87\x87\x05\x39\x74\x59\xea\xcc\xf2\xc8\x50\xea\x38\xdc\x76\x05\x3b\x5d\x93\xb3\xe2\x97\x3d\xba\x3b\x76\xba\xaa\x7e\x78\x1f\x9f\x07\x3f\x49\x4f\x8f\x83\xe6\xef\xc8\xc1\x83\x6e\x9c\xc4\xf5\x6e\xf1\x20\xf3\xd9\x9a\x4f\x2b\x67\xda\xe3\xab\x8c\x4c\x1f\x01\x3f\xc8\xc4\x83\xbf\x80\x59\x72\x9e\x10\x20\x15\x55\x01\xd6\xb0\x8c\xdc\xdd\x85\xbf\x6a\x29\x38\xfe\x85\xe6\x16\xcd\xdf\x7f\xfe\x76\x7f\x1f\x51\x6b\xd1\xd9\x48\x54\xb4\x40\x1b\xad\x9b\xef\x81\xd4\x85\x0e\x9a\x95\x7d\x9c\xee\xc2\x5a\x15\x27\x5d\xbc\x9b\x9d\x14\x33\x3b\xb9\x6d\x2f\x5f\xe4\xf8\x19\x0f\xd1\x39\x11\xcf\x60\xe6\x8c\x87\xf9\xd7\xf3\x50\x4e\x96\x9f\x4a\xaa\x0a\x84\x4f\x5a\xe5\xc2\x54\x8d\x2b\xa5\x51\x39\x19\x09\xae\x97\xa9\x75\x46\xab\x62\xf9\x0b\x4a\xa9\xaf\x7d\x17\x36\xc3\x34\xaa\x47\xc3\x3f\x97\xc2\x42\x85\xd6\xd2\x02\x41\x58\x70\xda\x9f\x55\x3e\x0d\xb8\x92\x3a\x70\x25\x02\x56\x54\x48\xa0\x9c\x1b\xb4\x16\xf6\x7a\x03\x06\xbd\x0c\xe5\xde\x9f\x61\xaa\x40\x0e\x94\xb9\x0d\x95\x72\x0f\x5b\x6d\xd6\x36\x04\xf8\x43\x22\xb5\x08\x4c\x0a\xb6\x6e\x40\x9a\x63\x6d\x85\x52\x6f\x07\x39\x3c\xe2\x96\x2a\xd7\x7c\x68\x4b\xdd\xeb\x8d\x39\xcb\x2b\x14\xb4\x32\x08\xc7\x6b\x69\x3b\x66\xd8\xfa\x3d\x9f\xa8\x77\x67\x7d\xe3\x65\x3a\xc2\xf9\xe8\x4e\x9f\xf6\xbb\xdb\xe3\xaf\xd9\xd5\x0e\x8c\x76\x07\xfd\xa8\xc4\x9b\xf2\xa3\x96\x90\xe8\xee\x2e\xfc\xac\xd7\xa8\xee\xef\xc9\xf2\x25\xd1\x69\x44\x2f\x14\x32\xd0\xfb\xf1\xfd\x48\xe9\x69\xd4\xd0\xfb\xca\xa6\xe9\xed\xca\x07\x46\x6f\x28\x1b\x30\xd2\xb7\xc6\x4a\x70\x2e\xf1\x68\x78\x12\x73\x37\xe8\x2b\xef\x5b\xf0\x42\x93\x39\xda\x77\x9e\x8f\x77\x1a\x3d\xbb\x76\x71\xcd\x6c\xd8\x5a\x4b\xc8\xf4\x71\x0d\x7d\x98\x0b\x97\x0f\xe2\xdb\xaf\x1e\xe1\x7e\x8c\xf5\x47\x6a\x37\x5e\xba\xff\x4b\xf1\xcf\xa9\x77\x58\xea\xa5\xea\x5e\x63\xce\xdb\x52\x38\x1c\xf8\xf2\x74\x7a\xea\xd0\x9b\x1b\xef\xcb\xcf\x62\xed\x29\x99\x75\xcd\xff\x42\xb7\x7e\xa5\xa0\xae\xba\x0b\xc1\x55\x37\xd7\x8a\x7f\x31\x81\xc9\xcd\xf0\x68\xf5\x7f\x9d\x33\x72\x0d\x4a\x3b\x30\x58\xcb\x3d\x70\x61\x90\x79\x3f\x75\x1a\x9c\x77\xe4\xa6\x9b\x43\xf8\x07\x81\x1a\x84\x8d\x6a\xbc\xcd\x69\x30\x68\x6b\xad\xf8\x00\xd4\x69\x10\xea\xcb\x46\x18\xb4\x60\xb1\xb5\xd2\x06\xa8\x73\xcf\x10\x7e\xd6\x06\xec\xa6\xf6\xd7\xb6\xeb\xe6\xe7\x08\x65\xee\xb2\x24\x7c\x7a\xa7\x93\x6e\xc2\xc7\x93\x32\x96\x83\x57\x7e\xbf\xc2\x21\xd2\x6a\xcc\x45\x86\x2f\x9f\xde\xda\x11\xeb\x79\x80\xd3\x47\x38\xcd\xed\xcd\x4a\xa3\xf6\xd6\x99\x46\xed\x0f\xb7\xff\x02\x00\x00\xff\xff\xb3\x5e\x2e\x57\xc0\x0d\x00\x00")

func serverMailTemplatesChange_email_confirmationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverMailTemplatesChange_email_confirmationHtml,
		"server/mail/templates/change_email_confirmation.html",
	)
}

func serverMailTemplatesChange_email_confirmationHtml() (*asset, error) {
	bytes, err := serverMailTemplatesChange_email_confirmationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/mail/templates/change_email_confirmation.html", size: 3520, mode: os.FileMode(420), modTime: time.Unix(1497816880, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverMailTemplatesInvite_tokenHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x6d\x93\x9b\xb6\x13\x7f\x9f\x4f\xb1\x21\xf3\xff\x5f\x3b\x73\x06\xce\xe7\x3a\x09\x06\x27\x4d\x27\x9d\x74\xda\x69\x3a\x4d\x32\x9d\xbe\x94\xa5\x05\xd4\x13\x12\x91\x64\x9f\x5d\xc6\xdf\xbd\x23\xc0\x98\x33\x38\x0f\x97\xe3\x8d\x11\x5a\xfd\x76\xf7\xb7\x4f\x72\x9c\xdb\x42\x2c\x1f\x01\xc4\x39\x12\xe6\x5e\x00\xe2\x02\x2d\x81\xdc\xda\x72\x82\x1f\xd7\x7c\x93\x78\x3f\x29\x69\x51\xda\xc9\xfb\x5d\x89\x1e\xd0\x66\x95\x78\x16\xb7\x36\x70\x00\x0b\xa0\x39\xd1\x06\x6d\xb2\xb6\xe9\xe4\x99\x07\x41\x8b\x24\xb8\xbc\x81\x5c\x63\x9a\x78\x0e\xcf\x44\x41\x90\x2a\x69\x8d\x9f\x29\x95\x09\x24\x25\x37\x3e\x55\x45\x40\x8d\x79\x91\x92\x82\x8b\x5d\xf2\x76\xbb\xcb\x50\x46\xb3\x30\xbc\x7c\x1a\x86\x1e\x68\x14\x89\x67\xec\x4e\xa0\xc9\x11\xad\xd7\x22\xd7\x5f\x9a\x77\x80\x95\x62\x3b\xa8\xda\x05\x80\x53\x31\x69\xe0\x22\xb8\x68\x00\x2f\x2e\xc1\x10\x69\x26\x06\x35\x4f\x17\xad\xe8\xfe\x51\xfb\x92\x5f\x9d\x1e\xbf\x45\x9e\xe5\x36\x02\xa9\x74\x41\xc4\xa2\xdb\x2c\x88\xce\xb8\x8c\x60\x1a\x96\x5b\x08\x61\x56\xff\x0c\xf0\xca\x1e\x9c\xe0\x12\x27\x79\x0b\x37\xf5\x87\xc2\xa4\x27\xec\x28\x9d\x30\xa4\x4a\x13\xcb\x95\x74\xfa\x25\x1e\xb5\x53\x25\x94\x8e\xe0\xc9\x8c\x3c\x0f\x71\x3a\x44\x8a\x72\xb5\x41\xfd\x29\xbc\xb5\x64\xa8\x9d\x49\x83\xc3\x2f\x0b\x64\x9c\x80\x92\x62\x07\x86\x6a\x44\x09\x44\x32\xf8\xae\x20\xdb\x09\xc3\x0d\xa7\x38\xb9\xe5\xcc\xe6\x11\xcc\x9e\x85\xe5\xf6\xfb\xbe\x16\xb2\x12\xd8\x5b\x03\xb4\x92\x57\x61\xf8\x3f\x78\xcc\x8b\x52\x69\x4b\xa4\x5d\xf4\x24\x4a\xc2\x18\x97\x59\x04\xe1\x19\x81\x03\xd3\xe3\xfb\x9d\xd9\x00\x96\xdd\x57\x75\x1d\xc4\x71\xf4\x3b\x5a\xe2\xa0\x4b\xb7\x38\x38\x14\x4a\xec\xb2\xae\xcd\xc6\x86\x00\x22\x78\x26\x13\x8f\xa2\xb4\xa8\x3d\x58\x29\xcd\x50\x27\x5e\xe8\x01\x45\x21\x5a\xad\xdd\xda\x94\x84\x1e\xd6\x4d\x7a\x24\x9e\x33\xda\x6b\x3c\x38\x2c\x56\x59\x1d\xf4\xc4\x7b\x92\xce\xd2\x79\xba\xf2\xa0\xb6\x25\xf1\x56\x84\xde\x64\x5a\xad\x25\x8b\xa0\xdd\x5b\x9c\x4b\xfd\x1f\x35\x27\xe2\x4e\x05\x74\xa9\x34\x9f\xcf\x9f\xcf\xd3\x45\x6b\xed\x84\x2a\x21\x48\x69\x30\x3a\xbc\x2c\xbc\x43\x95\xc5\x56\x2f\x3b\x86\x62\xcb\x60\xd3\x3a\x6c\x55\xe9\x9d\x38\xbf\xec\xd1\xdd\xb2\xd3\x7a\xf5\xc3\xb3\xf0\x54\xf8\xb3\xf4\xf4\x38\xa8\x9f\x8e\x83\x3b\xd5\x78\x15\x96\xdb\xc5\x1d\xcd\x27\x36\x1f\x2d\xa7\xca\xe1\xcb\xc4\x9b\x7e\x02\xfc\x90\x26\x0e\xfc\x2b\x98\xf5\x4e\x15\x02\xc4\xbc\xc8\xc0\x68\x9a\x78\x55\xe5\xff\xaa\x04\x67\xf8\x0e\xf5\x06\xf5\x87\x3f\x7f\xdb\xef\x03\x62\x0c\x5a\x13\xf0\x82\x64\x68\x82\x9b\x7a\x7f\x22\x54\xa6\x26\xb5\x65\x2f\xa7\x5b\xbf\x94\xd9\x31\x2f\x9e\xce\x8e\x19\x33\x3b\x76\xdb\x9e\xbe\xc0\xb2\x13\x1e\x82\x53\x22\xbe\x80\x99\x13\x1e\xe6\xdf\xce\x43\x7e\xb5\xfc\x5b\xad\xe1\x0d\xd9\x20\xbc\x72\x1d\xe6\x17\xb9\xe1\x16\x19\xbc\x57\xd0\xf0\xf2\x38\x0e\xf2\xab\x91\x93\xe5\x32\x36\x56\x2b\x99\x2d\xdf\xa0\x10\xea\xd2\x95\x64\xbd\x8c\x83\x72\x54\xbc\xaa\xfc\x16\xfc\xd5\xee\x83\x41\x2d\x49\x81\xfb\x3d\xe4\xc4\x00\x6f\x95\xee\xd4\x1a\xac\x82\x7f\x14\x97\x70\x40\xaf\x2a\xff\xad\xce\x7e\xaf\x85\x3b\x1d\x3e\xfc\x21\x90\x18\x04\x2a\x38\xbd\x01\x9b\x23\xd4\x93\x6d\x85\x42\xdd\x3a\x08\x42\x29\x96\xb6\xde\xa8\xc1\xeb\x66\x5b\xb7\x4f\x83\x76\x5d\x3a\x4d\xda\x09\xa9\xb5\xb4\xfe\xb8\xc5\x4d\x91\x0c\xab\xbd\xd7\x1a\xca\xed\x49\xa9\xb8\xcc\x1c\xa1\x79\x34\xb8\xc7\x10\xb7\x61\xfd\x96\x40\x36\x4f\x55\xf1\x14\xfc\x77\xef\xde\xbe\x96\xce\x78\xb6\xdf\x9f\x11\x04\x88\x49\x7b\x0d\x18\x2d\x00\xa1\x32\x2e\x03\x63\x54\x13\x19\x13\x54\x95\xff\x5e\xdd\xa0\xdc\xef\x5f\xb8\xb8\x25\x55\xe5\x37\x21\xf9\x3f\x16\x84\x0b\xb7\x7e\xed\x5e\xf6\x7b\x6f\xf9\xd0\x88\x71\x40\xce\x3b\x8c\xc2\xe0\x37\xba\xf9\xc0\x3e\x3e\xb4\x83\xf2\x5c\x18\x87\x4d\xa5\xfb\x3e\x92\x6c\x71\x50\x27\xf4\x3d\x3b\x53\xaf\x0e\x9e\x53\x72\x4d\xe8\x20\x07\xfb\xf3\xa7\xe0\x8c\x09\xec\xa6\x8a\xc0\xd4\x0e\x9a\x97\x1b\x0e\xf0\x95\x9d\xbc\x9b\x91\x69\x3a\xde\xce\xc8\xc9\xdd\x96\x29\x6a\xfc\xa6\x7f\xfb\x54\x75\x36\xf4\x61\xce\xdc\xf0\x3c\xd7\xd6\xca\x91\xc8\x8c\xb1\xfe\x09\xdf\xb5\x6b\x16\x0f\xe2\xfc\x97\xf8\x3b\x74\xf5\x9c\x77\xf7\x99\x80\xb7\x39\xb7\x38\x18\x7e\xd3\xe9\xb1\x27\x5e\x5f\xbb\xe1\xf7\x45\xac\x7d\x2e\xcd\xda\x76\xfb\x95\x23\xf1\x9e\x09\x75\xd1\xde\xba\x2e\xda\xb3\x86\xff\x8b\x11\x5c\x5d\x0f\xef\x2f\xee\x69\x67\x0f\x53\x20\x95\x05\x8d\xa5\xd8\x01\xe3\x1a\xa9\x15\x3b\x37\x7c\x6c\xce\x0d\xd4\x45\xee\xc3\x5f\x08\x44\x23\xac\xeb\x86\xec\x36\x35\x9a\x52\x49\x36\x00\xb5\x0a\xb8\xfc\xb8\xe6\x1a\x0d\x18\x94\xb6\x03\x22\x8c\x69\x34\xc6\x87\x9f\x95\x06\xb3\x2e\xdd\xdd\xf8\xb2\xfe\xcf\x47\xa8\x3d\x9f\x12\x4e\xbd\x55\x51\x7b\xe0\xe5\x31\x33\x96\x83\x4f\x2e\x5e\xfe\x10\x69\x35\xd6\x45\x86\x1f\x3f\x1f\xda\x91\xd6\x73\x07\xa7\x8f\x70\x3c\xdb\x3b\x15\x07\xcd\xd5\x3e\x0e\x9a\x7f\xc7\xff\x05\x00\x00\xff\xff\xda\x15\xc2\x63\x25\x0f\x00\x00")

func serverMailTemplatesInvite_tokenHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverMailTemplatesInvite_tokenHtml,
		"server/mail/templates/invite_token.html",
	)
}

func serverMailTemplatesInvite_tokenHtml() (*asset, error) {
	bytes, err := serverMailTemplatesInvite_tokenHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/mail/templates/invite_token.html", size: 3877, mode: os.FileMode(420), modTime: time.Unix(1497816880, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverMailTemplatesPassword_resetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x5b\x6f\xe3\x36\x13\x7d\xdf\x5f\x31\x1f\x17\x1f\xd2\x02\xd6\xc5\x97\xba\x1b\x59\xf2\xa6\x28\x50\xb4\x68\x81\x2e\xb6\x5b\x14\xfb\x48\x8b\x23\x89\x08\x45\x2a\x24\xed\xd8\x0d\xf2\xdf\x0b\xea\x62\xcb\x96\x9d\x5b\xeb\x97\x90\x22\x79\x66\xe6\xf0\xcc\x0c\x13\x17\xb6\x14\xcb\x77\x00\x71\x81\x94\xb9\x01\x40\x5c\xa2\xa5\x50\x58\x5b\x79\x78\xb7\xe6\x9b\x84\xfc\xa8\xa4\x45\x69\xbd\x2f\xbb\x0a\x09\xa4\xcd\x2c\x21\x16\xb7\x36\x70\x00\x0b\x48\x0b\xaa\x0d\xda\x64\x6d\x33\xef\x03\x81\xa0\x45\x12\x5c\xde\x42\xa1\x31\x4b\x88\xc3\x33\x51\x10\x64\x4a\x5a\xe3\xe7\x4a\xe5\x02\x69\xc5\x8d\x9f\xaa\x32\x48\x8d\xf9\x98\xd1\x92\x8b\x5d\xf2\xfb\x76\x97\xa3\x8c\xa6\x61\x38\x9a\x85\x21\x01\x8d\x22\x21\xc6\xee\x04\x9a\x02\xd1\x92\x16\xb9\xfe\xd2\x8c\x01\x56\x8a\xed\xe0\xa1\x9d\x00\x38\x13\x5e\x03\x17\xc1\x55\x03\x78\x35\x02\x43\xa5\xf1\x0c\x6a\x9e\x2d\xda\xad\x8f\xef\xda\x41\x31\x3e\x3d\x7e\x8f\x3c\x2f\x6c\x04\x52\xe9\x92\x8a\xc5\x7e\xb1\xa4\x3a\xe7\x32\x82\x49\x58\x6d\x21\x84\x59\xfd\x67\x80\x57\xf5\xe0\x04\x97\xe8\x15\x2d\xdc\xc4\x1f\x6e\xa6\xbd\xcd\x8e\x52\x8f\x61\xaa\x34\xb5\x5c\x49\x67\x5f\xe2\xc1\x7a\xaa\x84\xd2\x11\xbc\x9f\xd1\xeb\x10\x27\x43\xa4\xa8\x50\x1b\xd4\x4f\xe1\xad\x25\x43\xed\x5c\x1a\x1c\xbe\x29\x91\x71\x0a\x4a\x8a\x1d\x98\x54\x23\x4a\xa0\x92\xc1\x37\x25\xdd\x7a\x0c\x37\x3c\x45\xef\x9e\x33\x5b\x44\x30\xfb\x10\x56\xdb\x6f\xfb\x56\xe8\x4a\x60\x6f\x0e\xd0\xee\x1c\x87\xe1\xff\xe1\x7f\xbc\xac\x94\xb6\x54\xda\x45\x6f\x47\x45\x19\xe3\x32\x8f\x20\xbc\xb0\xa1\x63\xfa\xfc\xfa\xde\x6d\x00\xcb\xde\x6a\xba\xbe\xc4\xf3\xe8\x47\x56\xe2\x60\x2f\xb7\x38\xe8\x12\x25\x76\xaa\x6b\xd5\xd8\x10\x40\x05\xcf\x65\x42\x52\x94\x16\x35\x81\x95\xd2\x0c\x75\x42\x42\x02\x29\x0a\xd1\x5a\xdd\xcf\x4d\x45\xd3\x6e\xde\xc8\x23\x21\xce\x69\xd2\x44\xd0\x4d\x56\x79\x7d\xe9\x09\x79\x9f\xcd\xb2\x79\xb6\x22\x50\xfb\x92\x90\x15\x4d\x6f\x73\xad\xd6\x92\x45\xd0\xae\x2d\x2e\x49\xff\x07\xcd\xa9\x38\xca\x80\xbd\x94\xe6\xf3\xf9\xf5\x3c\x5b\xb4\xde\x7a\xa9\x12\x82\x56\x06\xa3\x6e\xb0\x20\x5d\x96\xc5\x56\x2f\xf7\x0c\xc5\x96\xc1\xa6\x0d\xd8\xaa\x8a\x9c\x04\xbf\xec\xd1\xdd\xb2\xd3\x46\xf5\xdd\x87\xf0\x74\xf3\xb3\xf4\xf4\x38\xa8\x7f\x7b\x0e\x8e\xb2\x71\x1c\x56\xdb\xc5\x91\xe5\x13\x9f\x0f\x9e\xa7\xca\xe1\xcb\x84\x4c\x9e\x00\xef\x64\xe2\xc0\x5f\xc1\x2c\x39\x35\x08\x10\xf3\x32\x07\xa3\xd3\x84\x3c\x3c\xf8\xbf\x2a\xc1\x19\xfe\x81\x7a\x83\xfa\xcf\xcf\xbf\x3d\x3e\x06\xd4\x18\xb4\x26\xe0\x25\xcd\xd1\x04\xb7\xf5\xba\x27\x54\xae\xbc\xda\xb3\x9b\xc9\xd6\xaf\x64\x7e\xd0\xc5\xf7\xb3\x83\x62\x66\x87\x6a\xdb\xb3\x17\x58\x76\xc2\x43\x70\x4a\xc4\x0b\x98\x39\xe1\x61\xfe\xef\x79\x28\xc6\x1d\x68\xbf\xc8\x4e\xc3\x90\x2c\x3f\xa3\x41\x0b\x5f\xd5\x5a\x43\xc3\x10\x7c\xa2\xc6\xdc\x2b\xcd\x7c\xdf\x8f\x83\x62\x7c\x06\xae\x5a\x7e\x55\xeb\x11\x28\x0d\x46\x95\xa8\x24\x42\xa5\xd1\xa2\x74\xee\x82\x55\xb0\x42\xd8\xb9\x0d\x1a\xef\xd6\x68\x2c\x32\xa0\x50\xb5\xa8\xa0\x9d\x41\x1f\x7e\x52\x42\xa8\x7b\xb0\x05\x42\xdd\xad\x56\x58\x4f\x55\xb3\xee\xce\xeb\xfd\x99\x28\x0e\xaa\xb3\x6e\xc4\xb4\xed\x72\x67\xef\x57\xa8\x9c\xcb\xa0\xc6\xfb\x68\xd5\x2d\xca\xe4\xe1\xc1\xff\xe2\x06\x8f\x8f\x5d\xe0\x5d\xb0\x71\x40\x97\x17\xac\x74\xd4\x35\x99\xfb\xfe\x3a\xa5\x53\x9a\x92\x65\x8c\xe5\xf2\x97\xcc\x39\x0a\x8c\x33\x79\x65\xa1\xa4\xb7\x58\x07\xd4\xc6\x3d\x72\x13\x09\x3c\x97\x4a\xbb\x05\x6e\x00\x4b\xca\xc5\x08\xa8\x01\xa9\x5c\xf3\x96\x39\x1a\x28\xe8\x06\x61\xe5\x0a\x7f\x49\x19\xfa\x71\x80\xe5\x39\x5f\x5e\xa8\xae\x5e\x62\x75\xae\x9e\xd1\x5b\x57\x43\x4a\xce\x98\xc0\x7d\x65\x10\x98\xd9\x81\x00\x5d\x82\xc3\x2b\xb3\x71\x5f\xe7\xb2\xec\xbc\x24\xe9\xc9\xfb\x84\xa9\xd4\xf8\x4d\x0e\xfa\xa9\x22\xc7\xa4\x37\x30\x17\xba\x34\x59\xfe\x8c\xa2\x72\x17\xf8\x2c\x61\x4f\xc6\xae\x5d\x52\xfc\x27\xc1\xbf\x24\xde\x61\xa8\x97\xa2\x7b\x4b\x15\xbb\x2f\xb8\xc5\x41\x01\x9b\x4c\x0e\x05\x6c\x3a\x75\x05\xec\x45\xac\x3d\x27\xb3\xb6\x41\xbe\xb2\xac\xbd\x51\x50\x57\x6d\xe7\xbc\x6a\xcf\x1a\xfe\x37\x46\x30\x9e\x0e\x7b\x90\xfb\x7d\x12\x48\x0d\x02\x53\x20\x95\x05\x8d\x95\xd8\x01\xe3\x1a\x53\x2b\x76\xae\xd8\x1c\x92\xd2\x87\xbf\x10\xa8\x46\x58\xcb\xba\x6d\x36\x95\xa8\x52\x92\x0d\x40\xad\x02\x2e\xef\xd6\x5c\xa3\x01\x83\xd2\xee\x81\x28\x63\x1a\x8d\x71\xc5\x4d\x83\x59\x57\xee\x7d\x33\xaa\xdf\xed\x34\xb5\x97\x25\xe1\xcc\x5b\x15\xb5\x07\x6e\x0e\xca\x58\x0e\x3e\xb9\xfb\xf2\x87\x48\xab\x41\x4f\x39\xfb\xf1\xf9\xab\x8d\x83\xfa\xd1\x70\xf4\xa9\x8f\xd3\x47\x38\x9c\xed\x9d\x8a\x83\xe6\x79\x16\x07\xcd\x7f\x38\xff\x04\x00\x00\xff\xff\xa7\xd5\x94\xeb\xe9\x0c\x00\x00")

func serverMailTemplatesPassword_resetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverMailTemplatesPassword_resetHtml,
		"server/mail/templates/password_reset.html",
	)
}

func serverMailTemplatesPassword_resetHtml() (*asset, error) {
	bytes, err := serverMailTemplatesPassword_resetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/mail/templates/password_reset.html", size: 3305, mode: os.FileMode(420), modTime: time.Unix(1497816880, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverMailTemplatesSmtp_setupHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xdf\x6f\xdb\x36\x10\x7e\xef\x5f\x71\x65\x31\x78\x03\x22\x4b\x4e\x3c\x2f\x95\x25\x2f\x43\x81\xbd\xac\xc3\x8a\xa5\xc3\x9e\x69\xf1\x2c\x11\xa1\x78\x2c\x49\x39\xd6\x82\xfc\xef\x83\x7e\xd9\x8a\x95\xb6\x4b\xa7\x17\xf1\xc7\xdd\xf7\x1d\xbf\xbb\xa3\x94\x14\xbe\x54\x9b\x57\x00\x49\x81\x5c\x34\x03\x80\xa4\x44\xcf\xa1\xf0\xde\x04\xf8\xa9\x92\xfb\x94\xbd\x23\xed\x51\xfb\xe0\x63\x6d\x90\x41\xd6\xcd\x52\xe6\xf1\xe0\xc3\x06\x60\x0d\x59\xc1\xad\x43\x9f\x56\x7e\x17\x5c\x33\x08\x7b\x24\x25\xf5\x1d\x14\x16\x77\x29\x6b\xf0\x5c\x1c\x86\x3b\xd2\xde\xcd\x73\xa2\x5c\x21\x37\xd2\xcd\x33\x2a\xc3\xcc\xb9\x9f\x77\xbc\x94\xaa\x4e\xff\x38\xd4\x39\xea\xf8\x2a\x8a\x2e\x96\x51\xc4\xc0\xa2\x4a\x99\xf3\xb5\x42\x57\x20\x7a\xd6\x23\xb7\x2b\xdd\x18\x60\x4b\xa2\x86\x87\x7e\x02\xd0\x50\x04\x1d\x5c\x0c\xb3\x0e\x70\x76\x01\x8e\x6b\x17\x38\xb4\x72\xb7\xee\x4d\x1f\x5f\xf5\x83\x62\x71\xee\x7e\x8f\x32\x2f\x7c\x0c\x9a\x6c\xc9\xd5\xfa\xb8\x59\x72\x9b\x4b\x1d\xc3\x65\x64\x0e\x10\xc1\xb2\x7d\x4d\xf0\xcc\x08\x4e\x49\x8d\x41\xd1\xc3\x5d\xce\xa7\xc6\x7c\x64\xdc\x48\x1a\x08\xcc\xc8\x72\x2f\x49\x37\xfc\x1a\x4f\xec\x19\x29\xb2\x31\xbc\x59\xf2\xb7\x11\x5e\x4e\x91\xe2\x82\xf6\x68\xbf\x84\x57\x69\x81\xb6\x09\x69\xe2\x7c\x53\xa2\x90\x1c\x48\xab\x1a\x5c\x66\x11\x35\x70\x2d\xe0\xfb\x92\x1f\x02\x81\x7b\x99\x61\x70\x2f\x85\x2f\x62\x58\x5e\x47\xe6\xf0\xc3\x98\x85\x6f\x15\x8e\xe6\x00\xbd\xe5\x22\x8a\xbe\x83\xd7\xb2\x34\x64\x3d\xd7\x7e\x3d\xb2\x30\x5c\x08\xa9\xf3\x18\xa2\xcf\x18\x0c\x4a\x3f\xbf\x7f\x0c\x1b\xc0\x8b\x6f\xa5\x6e\x93\xf8\x3c\xfa\x13\x96\x24\x3c\x96\x5b\x12\x0e\x8d\x92\x34\x55\xd7\x57\x63\x27\x00\x57\x32\xd7\x29\xcb\x50\x7b\xb4\x0c\xb6\x64\x05\xda\x94\x45\x0c\x32\x54\xaa\x67\x3d\xce\x9d\xe1\xd9\x30\xef\xca\x23\x65\x4d\xd0\xac\x3b\xc1\x30\xd9\xe6\x6d\xd2\x53\xf6\x66\xb7\xdc\xad\x76\x5b\x06\x6d\x2c\x29\xdb\xf2\xec\x2e\xb7\x54\x69\x11\x43\xbf\xb7\xfe\x5c\xe9\xff\x62\x25\x57\x4f\x3a\xe0\x58\x4a\xab\xd5\xea\xed\x6a\xb7\xee\xa3\x0d\x32\x52\x8a\x1b\x87\xf1\x30\x58\xb3\xa1\xcb\x12\x6f\x37\x47\x85\x12\x2f\x60\xdf\x1f\xd8\x93\x61\x67\x87\xdf\x8c\xe4\xee\xd5\xe9\x4f\xf5\xe3\x75\x74\x6e\xfc\x55\x79\x46\x1a\xb4\xcf\x51\x83\x27\xdd\xb8\x88\xcc\x61\xfd\x84\xf9\x2c\xe6\x53\xe4\x19\x35\xf8\x3a\x65\x97\x5f\x00\x1f\xca\xa4\x01\x7f\x81\xb2\xec\x9c\x10\x20\x91\x65\x0e\xce\x66\x29\x7b\x78\x98\xff\x46\x4a\x0a\xbc\x45\xbb\x47\xfb\xd7\x9f\xef\x1f\x1f\x43\xee\x1c\x7a\x17\xca\x92\xe7\xe8\xc2\xbb\x76\x3f\x50\x94\x53\xd0\x46\x76\x73\x79\x98\x1b\x9d\x9f\xea\xe2\xa7\xe5\xa9\x62\x96\xa7\xdb\x76\xc4\x17\x7a\x71\xa6\x43\x78\x2e\xc4\x7f\x50\xe6\x4c\x87\xd5\xff\xd7\xa1\x58\x0c\xa0\xe3\x4b\xf6\x2a\x8a\xd8\xe6\x1d\xe9\x9d\xb4\x25\x0a\xe8\x04\x82\xdb\xdf\x3f\x7e\x80\x5b\xf4\x95\x49\xc2\x62\xf1\x0c\x98\xd9\xbc\x27\xba\x73\xa0\xe4\x1d\x42\x4d\xd5\x6c\x8f\x90\x93\xef\x1c\x5d\xe3\x08\xc6\x92\x41\xab\x6a\x20\xdd\x58\x58\x48\x78\xff\x39\x7a\x2e\x11\x6c\xd3\x53\x4b\xed\x3c\xd7\x19\x26\x21\xdf\x00\x59\x40\xe5\x5a\x06\xb8\xa7\x4a\x09\x3d\xf3\xb0\x45\xb0\xc8\x1b\x59\xc0\x17\xd2\xbd\x4e\x42\xf3\x8d\x49\x98\x36\xf8\x0b\xd3\xf2\xc2\xf2\x1c\x1a\x7f\xd6\x77\xfe\xac\xf7\x75\xf2\x1f\x8c\x61\x71\x35\xed\xa1\xe6\xf9\xa0\x90\x3b\x04\x41\xa0\xc9\x83\x45\xa3\x6a\x10\xd2\x62\xe6\x55\x0d\x9e\x5a\x11\x00\x4b\x2e\xd5\x1c\xfe\x46\xe0\x16\xa1\xd2\x6d\xdb\x7b\x02\x8b\xce\x90\x16\x13\x50\x4f\x20\xf5\xa7\x4a\x5a\x74\xe0\x50\xfb\x23\x10\x17\xc2\xa2\x73\x73\xf8\x95\x2c\xb8\xca\x34\xf7\xf3\x45\xfb\xdf\xc1\x33\x3f\x2d\x84\x21\xa7\x0d\xbd\xa7\xb8\x77\xb8\xe9\x1a\x69\x9e\x11\xdb\x4c\x96\x9a\xcc\xce\xa7\x48\xdb\x49\x4f\x3c\xbb\xf8\xf5\xd4\x26\x61\x7b\xe9\x3d\x59\x1a\xe3\x8c\x11\x4e\xbe\x23\xaf\x24\xec\x3e\x2f\x49\xd8\xfd\xa1\xfd\x1b\x00\x00\xff\xff\xd0\x4f\xf2\xfc\xa9\x09\x00\x00")

func serverMailTemplatesSmtp_setupHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverMailTemplatesSmtp_setupHtml,
		"server/mail/templates/smtp_setup.html",
	)
}

func serverMailTemplatesSmtp_setupHtml() (*asset, error) {
	bytes, err := serverMailTemplatesSmtp_setupHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/mail/templates/smtp_setup.html", size: 2473, mode: os.FileMode(420), modTime: time.Unix(1497816880, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"server/mail/templates/change_email_confirmation.html": serverMailTemplatesChange_email_confirmationHtml,
	"server/mail/templates/invite_token.html": serverMailTemplatesInvite_tokenHtml,
	"server/mail/templates/password_reset.html": serverMailTemplatesPassword_resetHtml,
	"server/mail/templates/smtp_setup.html": serverMailTemplatesSmtp_setupHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"server": &bintree{nil, map[string]*bintree{
		"mail": &bintree{nil, map[string]*bintree{
			"templates": &bintree{nil, map[string]*bintree{
				"change_email_confirmation.html": &bintree{serverMailTemplatesChange_email_confirmationHtml, map[string]*bintree{}},
				"invite_token.html": &bintree{serverMailTemplatesInvite_tokenHtml, map[string]*bintree{}},
				"password_reset.html": &bintree{serverMailTemplatesPassword_resetHtml, map[string]*bintree{}},
				"smtp_setup.html": &bintree{serverMailTemplatesSmtp_setupHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

